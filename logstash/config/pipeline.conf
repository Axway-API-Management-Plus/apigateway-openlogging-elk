input {
  beats {
      port => 5044
      host => "0.0.0.0"
      include_codec_tag => true
   }
}

filter {
  # The logtype has been set by Filebeat to distinct between OpenLog and TraceLog
  if ([logtype] == "openlog") {
    # Parse the received payload into a JSON-Object
    json {
       source => "[message]"
       target => "[message]"
    }
    # Use the given timestamp from OpenLog for the logstash timestamp send to ElasticSearch
    date {
       match => [ "timestamp", "UNIX_MS" ]
    }
    mutate {
      remove_field => ["host", "timestamp"]
    }
    # Transaction-Element 
    if([transactionElement]) {
      mutate { add_field => { "[@metadata][indexKey]" => "transactionElement" } }
    } else if ([transactionSummary]) {
      mutate { add_field => { "[@metadata][indexKey]" => "transactionSummary" } }
    } else if ([circuitPath]) {
      mutate { add_field => { "[@metadata][indexKey]" => "circuitPath" } }
    }
  } else if([logtype] == "tracelog") {
    if [message] =~ /^#/ {
      drop { }
    }
    if [message] =~ /^\s*$/ {
      drop { }
    }
    grok {
      match => { "message" => "%{LOGLEVEL:level}%{SPACE}(?<loggedDate>\d{2}\/.{3}\/\d{4}:\d{2}:\d{2}:\d{2}\.\d{3})%{SPACE}\[%{WORD:fluff}\:%{WORD:correlationId}\]\s*%{GREEDYDATA:body}" }
    }
    # Add trace-messages not related to a specific error to a generic trace index
    if([correlationId] == "000000000000000000000000") {
      mutate { add_field => { "[@metadata][indexKey]" => "general_trace" } }
    } 
    date {
      # LoggedDate is provided like so 13/Jul/2020:15:26:35.108
      match => [ "loggedDate", "dd/MMM/yyyy:HH:mm:ss.SSS" ]
    }

    mutate {
      update => { "message" => "%{[body]}" } 
      remove_field => [ "host", "monthDay", "month", "year", "time", "fluff", "loggedDate", "body" ]
      add_field => { "[@metadata][indexKey]" => "trace" } 
    }
  }
  # This tag is added mainly for the logstash-verifier test
  mutate { add_tag => [ "%{[@metadata][indexKey]}" ] }
}

output {
  elasticsearch {
    hosts => "elasticsearch1:9200"
    index => "openlog-%{[@metadata][indexKey]}-%{+YYYY.MM.dd}"
    template => "${HOME}/pipeline/openlog_index_template.json"
    template_overwrite => true
  }
  stdout {
    codec => rubydebug
  }
}
