input { pipeline { address => "TraceMessages" } }


filter {
  # The logtype has been set by Filebeat to distinct between OpenLog and TraceLog
  if [message] =~ /^#/ {
    drop { }
  }
  if [message] =~ /^\s*$/ {
    drop { }
  }
  grok {
    match => { "message" => "%{LOGLEVEL:level}%{SPACE}(?<loggedDate>\d{2}\/.{3}\/\d{4}:\d{2}:\d{2}:\d{2}\.\d{3})%{SPACE}\[%{WORD:fluff}\:%{WORD:correlationId}\]\s?%{GREEDYDATA:body}" }
  }
  date {
    # LoggedDate is provided like so 13/Jul/2020:15:26:35.108
    match => [ "loggedDate", "dd/MMM/yyyy:HH:mm:ss.SSS" ]
    # Using the given timezone by Filebeat (from the API-Gateway) as it might differ to the Logstash timezone
    timezone => "%{[event][timezone]}"
  }

  mutate {
    update => { "message" => "%{[body]}" } 
    add_field => { "[processInfo][gatewayName]" => "%{[gatewayName]}" }
    add_field => { "[processInfo][gatewayRegion]" => "%{[gatewayRegion]}" }
    remove_field => [ "agent", "ecs", "host", "monthDay", "month", "year", "time", "fluff", "loggedDate", "body", "gatewayName", "gatewayRegion", "event" ]
  }
}

output {
  if [correlationId] == "000000000000000000000000" {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      ssl => true
      cacert => "${ELASTICSEARCH_CERT}"
      user => "${LOGSTASH_USERNAME}"
      password => "${LOGSTASH_PASSWORD}"
      index => "apigw-trace-messages%{[@metadata][regionIndexSuffix]}"
      id => "GeneralTraceMessages"
    }
  } else {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOSTS}"
      ssl => true
      cacert => "${ELASTICSEARCH_CERT}"
      user => "${LOGSTASH_USERNAME}"
      password => "${LOGSTASH_PASSWORD}"
      index => "apigw-traffic-trace%{[@metadata][regionIndexSuffix]}"
      id => "TrafficTraceMessages"
    }
  }
# Enable if you would like to see outgoing event messages
#  stdout {
#    codec => rubydebug {
#      metadata => true
#    }
#  }
}