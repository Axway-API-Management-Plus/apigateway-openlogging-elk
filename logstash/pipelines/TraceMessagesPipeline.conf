input { pipeline { address => "TraceMessages" } }


filter {
  # The logtype has been set by Filebeat to distinct between OpenLog and TraceLog
  if [message] =~ /^#/ {
    drop { }
  }
  if [message] =~ /^\s*$/ {
    drop { }
  }
  grok {
    match => { "message" => "%{LOGLEVEL:level}%{SPACE}(?<loggedDate>\d{2}\/.{3}\/\d{4}:\d{2}:\d{2}:\d{2}\.\d{3})%{SPACE}\[%{WORD:fluff}\:%{WORD:correlationId}\]\s*%{GREEDYDATA:body}" }
  }
  date {
    # LoggedDate is provided like so 13/Jul/2020:15:26:35.108
    match => [ "loggedDate", "dd/MMM/yyyy:HH:mm:ss.SSS" ]
  }

  mutate {
    update => { "message" => "%{[body]}" } 
    remove_field => [ "host", "monthDay", "month", "year", "time", "fluff", "loggedDate", "body" ]
  }
}

output {
  if [correlationId] == "000000000000000000000000" {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOST}"
      index => "apigw-trace-messages-%{+YYYY}"
      template => "${HOME}/index_templates/trace_messages_index_template.json"
      template_name => "trace-messages"
      template_overwrite => true
    }
  } else {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOST}"
      index => "apigw-traffic-trace-%{+YYYY.w}"
      template => "${HOME}/index_templates/trace_messages_index_template.json"
      template_name => "trace-messages"
      template_overwrite => true
    }
  }
# Enable if you would like to see outgoing event messages
#  stdout {
#    codec => rubydebug
#  }
}