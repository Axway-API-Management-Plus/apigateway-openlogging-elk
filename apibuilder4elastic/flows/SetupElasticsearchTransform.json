{
	"schemaVersion": "4",
	"info": {
		"name": "Setup Transforms",
		"description": "Maintains Elasticsearch Transformations"
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			},
			"indexName": {
				"type": "string",
				"description": "The name of the index used as a prefix to name required ES config assets."
			},
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			}
		},
		"additionalProperties": false
	},
	"start": "condition.1",
	"nodes": {
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Is transform setup disabled?",
			"method": "equals",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.env.DISABLE_SETUP_FLOWS",
					"metaName": "Source",
					"metaDescription": "The input to test."
				},
				{
					"name": "value",
					"type": "string",
					"value": "\"true\"",
					"metaName": "Value",
					"metaDescription": "The value to test input against."
				}
			],
			"outputs": {
				"true": {
					"routes": [],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"file.1"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"file.1": {
			"type": "nodehandler://@axway-api-builder-ext/api-builder-plugin-fn-file/file",
			"name": "Read Index-Config",
			"method": "readFile",
			"parameters": [
				{
					"name": "filename",
					"type": "jsonpath",
					"value": "$.config.indexConfigFile",
					"metaName": "Source filename",
					"metaDescription": "The filename to read."
				},
				{
					"name": "notFoundFails",
					"type": "boolean",
					"value": "true",
					"metaName": "Not found fails",
					"metaDescription": "Set this flag, if you would like to have this flow node failed (Error) if the file cannot be found."
				},
				{
					"name": "parseJson",
					"type": "boolean",
					"value": "true",
					"metaName": "Parse JSON",
					"metaDescription": "Turn this option if you are reading s JSON-File and would like to parse it into a JS-Object."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"elk-solution-utils.1"
					],
					"context": "$.configFile",
					"metaName": "Next"
				},
				"notFound": {
					"routes": [],
					"context": "$.result",
					"metaName": "Not found"
				},
				"error": {
					"routes": [
						"power.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Read file"
		},
		"elk-solution-utils.1": {
			"type": "nodehandler://api-builder-plugin-elk-solution-utils/elk-solution-utils",
			"name": "Get index config",
			"method": "getIndexConfig",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "Object that contains either the property indexName or params.indexName."
				},
				{
					"name": "indexConfigs",
					"type": "jsonpath",
					"value": "$.configFile",
					"metaName": "Index configs",
					"metaDescription": "Object that contains all index configurations"
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"file.2"
					],
					"context": "$.indexConfig",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"power.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Get index config"
		},
		"file.2": {
			"type": "nodehandler://@axway-api-builder-ext/api-builder-plugin-fn-file/file",
			"name": "Read transform config",
			"method": "readFile",
			"parameters": [
				{
					"name": "notFoundFails",
					"type": "boolean",
					"value": "false",
					"metaName": "Not found fails",
					"metaDescription": "Set this flag, if you would like to have this flow node failed (Error) if the file cannot be found."
				},
				{
					"name": "parseJson",
					"type": "boolean",
					"value": "true",
					"metaName": "Parse JSON",
					"metaDescription": "Turn this option if you are reading s JSON-File and would like to parse it into a JS-Object."
				},
				{
					"name": "filename",
					"type": "jsonpath",
					"value": "$.indexConfig.transform.config",
					"metaName": "Source filename",
					"metaDescription": "The filename to read."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"axway-api-management.2",
						"axway-api-management.1"
					],
					"context": "$.transformBody",
					"metaName": "Next"
				},
				"notFound": {
					"routes": [],
					"context": "$.result",
					"metaName": "Not found"
				},
				"error": {
					"routes": [
						"power.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Read file"
		},
		"elasticsearch.1": {
			"type": "nodehandler://@axway-api-builder-ext/api-builder-plugin-fn-elasticsearch/elasticsearch",
			"name": "Create transform",
			"method": "putTransform",
			"parameters": [
				{
					"name": "startTransform",
					"type": "boolean",
					"value": "true",
					"metaName": "Start transform",
					"metaDescription": "This toggle controls if the created transform job should be started automatically after creation."
				},
				{
					"name": "transformId",
					"type": "jsonpath",
					"value": "$.indexConfig.transform.id",
					"metaName": "Transform-ID",
					"metaDescription": "The id of the new transform."
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.transform.transformBody",
					"metaName": "Transform configuration",
					"metaDescription": "The transform job configuration"
				},
				{
					"name": "idSuffix",
					"type": "jsonpath",
					"value": "$.transform.transformIdSuffix",
					"metaName": "Transform-ID Suffix",
					"metaDescription": "Mandatory if an existing transform is to be replaced. The Transform-ID suffix is used to generate the final Transform-ID, which is used to create the transform. Existing transforms with the primary transforms ID are searched for, stopped/deleted and a new transform with transform ID + suffix is created."
				},
				{
					"name": "deletePreviousTransform",
					"type": "boolean",
					"value": "true"
				}
			],
			"outputs": {
				"next": {
					"routes": [],
					"context": "$.transform",
					"metaName": "Next"
				},
				"noUpdate": {
					"routes": [],
					"context": "$.message",
					"metaName": "No update"
				},
				"error": {
					"routes": [
						"power.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Create transform"
		},
		"power.1": {
			"type": "nodehandler://@axway-api-builder-ext/api-builder-plugin-fn-power/power",
			"name": "Shutdown",
			"method": "shutdown",
			"parameters": [
				{
					"name": "errorCode",
					"type": "number",
					"value": "55",
					"metaName": "Error code",
					"metaDescription": "An integer number used for the process to exit. Defaults to -1."
				},
				{
					"name": "errorMessage",
					"type": "jsonpath",
					"value": "$.error",
					"metaName": "Error message",
					"metaDescription": "An optional message which is logged when the process is terminated. Helpful to make clear the reason for the shutdown."
				},
				{
					"name": "skipInDevelopment",
					"type": "boolean",
					"value": "true",
					"metaName": "Skip in development",
					"metaDescription": "If set to true, the API-Builder process will not be stopped, when in development mode. Instead only the errorCode and errorMessage is logged."
				}
			],
			"outputs": {
				"next": {
					"context": "$.errorMessage",
					"routes": [],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Shutdown"
		},
		"axway-api-management.1": {
			"type": "nodehandler://api-builder-plugin-axway-api-management/axway-api-management",
			"name": "Get API-Mgr Custom-Props",
			"method": "getCustomPropertiesConfig",
			"parameters": [
				{
					"name": "disableCustomProperties",
					"type": "jsonpath",
					"value": "$.config.disableCustomProperties",
					"metaName": "Disable custom properties",
					"metaDescription": "Convience flag to disable loading of custom properties. This may be set by a configuration toggle."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"axway-api-management.2"
					],
					"context": "$.customProperties",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"power.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Get custom properties"
		},
		"axway-api-management.2": {
			"type": "nodehandler://api-builder-plugin-axway-api-management/axway-api-management",
			"name": "Merge custom properties into Transform",
			"method": "mergeCustomPropertiesIntoTransform",
			"parameters": [
				{
					"name": "customProperties",
					"type": "jsonpath",
					"value": "$.customProperties",
					"metaName": "Custom properties",
					"metaDescription": "The custom properties as they have been loaded from the API-Manager"
				},
				{
					"name": "transformBody",
					"type": "jsonpath",
					"value": "$.transformBody",
					"metaName": "Transform body",
					"metaDescription": "The transform job as it should be created without custom properties merged."
				},
				{
					"name": "customPropertiesSettings",
					"type": "jsonpath",
					"value": "$.indexConfig.template.customProperties",
					"metaName": "Custom properties settings",
					"metaDescription": "Controls if and how custom properties should be merged into the transform. See config file: elasticsearch_config/index_config.json"
				},
				{
					"name": "eventLogCustomProperties",
					"type": "jsonpath",
					"value": "$.config.eventLogCustomProps",
					"metaName": "EventLog Custom properties",
					"metaDescription": "The EventLog custom properties which are configured using the parameter EVENTLOG_CUSTOM_ATTR. If given, they will be additionally merged into the index template."
				},
				{
					"name": "transformIdSuffix",
					"type": "jsonpath",
					"value": "$.indexConfig.transform.idSuffix",
					"metaName": "The Transform ID-Suffix",
					"metaDescription": "This ID-Suffix (e.g. V1, V2, etc.) makes the transform name unique in Elasticsearch. If custom properties were used, a hash code is generated from all property names and appended to the primary ID. (e.g. V1-7868768). This allows an existing transform with the same custom properties to be recognized. If the custom properties change, a new transform job is created. If no custom properties are configured, the ID is returned unchanged."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"elasticsearch.1"
					],
					"context": "$.transform",
					"metaName": "Next"
				},
				"noUpdate": {
					"routes": [
						"elasticsearch.1"
					],
					"context": "$.transform",
					"metaName": "No update"
				},
				"error": {
					"routes": [
						"power.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Merge custom properties into Transform"
		}
	}
}