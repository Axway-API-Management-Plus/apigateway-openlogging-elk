{
	"schemaVersion": "4",
	"info": {
		"name": "Traffic-Monitor API - CircuitPath",
		"description": "Used by Traffic monitor display the Policy-Execution path"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "authorization.1",
	"nodes": {
		"elasticsearch.1": {
			"type": "nodehandler://@axway-api-builder-ext/api-builder-plugin-fn-elasticsearch/elasticsearch",
			"name": "Search Circuitpath",
			"method": "search",
			"parameters": [
				{
					"name": "query",
					"type": "jsonpath",
					"value": "$.elasticQuery",
					"metaName": "Query",
					"metaDescription": "Defines the search definition using the Query DSL. Learn more: https://www.elastic.co/guide/en/elasticsearch/reference/7.x/query-dsl.html"
				},
				{
					"name": "index",
					"type": "jsonpath",
					"value": "$.index",
					"metaName": "Index",
					"metaDescription": "Comma-separated list or wildcard expression of index names used to limit the request."
				}
			],
			"outputs": {
				"next": {
					"context": "$.elasticsearch.result",
					"routes": [
						"javascript.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Search"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Return Circuitpath response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.result",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Format Circuitpath result",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.elasticsearch.result.body.hits",
					"metaName": "data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let result = [];\\n  //console.log(data);\\n  \\n  if(typeof data.hits[0] != \\\"undefined\\\"){\\n  \\tresult = data.hits[0]._source.circuitPath;\\n  }\\n  \\n  return result;\"",
					"metaName": "code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"http.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Define circuitpath Index",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"// Perhaps there is a region given\\n  let region = data.params.region;\\n  let index = 'apigw-traffic-details';\\n  // Atach the region if given\\n  if(region) {\\n    index = `${index}-${region.toLowerCase()}`;\\n  }\\n  index = `${index}-*`;\\n  \\n  if(data.config.testElasticIndex) {\\n    index = data.config.testElasticIndex;\\n  }\\n  return index;\"",
					"metaName": "code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				}
			],
			"outputs": {
				"next": {
					"context": "$.index",
					"routes": [
						"javascript.3"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Build Circuitpath Query",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let elasticQuery = ({\\n        \\\"bool\\\": {\\n            \\\"must\\\": [\\n                {\\n                    \\\"term\\\": {\\n                        \\\"correlationId\\\": data.params.correlationID\\n                    }\\n                },\\n                {\\n                    \\\"term\\\": {\\n                        \\\"processInfo.serviceId\\\": data.params.serviceID\\n                    }\\n                }\\n            ]\\n        }\\n    });\\n    if (data.user.gatewayManager.isAdmin || data.authzConfig.enableUserAuthorization == false) {\\n        return elasticQuery;\\n    }\\n\\n    var orgFilter;\\n    if (data.user.apiManager.role == \\\"admin\\\") {\\n        orgFilter = {\\n            exists: {\\n                \\\"field\\\": \\\"transactionSummary.serviceContext\\\"\\n            }\\n        };\\n    } else {\\n        orgFilter = {\\n            term: {\\n                \\\"transactionSummary.serviceContext.apiOrg\\\": data.user.apiManager.organizationName\\n            }\\n        };\\n    }\\n    elasticQuery.bool.must.push(orgFilter);\\n\\n    return elasticQuery;\"",
					"metaName": "code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				}
			],
			"outputs": {
				"next": {
					"context": "$.elasticQuery",
					"routes": [
						"elasticsearch.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "HTTP Error Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "500",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "object",
					"value": "{\n  \"errors\": [\n    {\n      \"code\": \"n.a\",\n      \"message\": \"error occurred\" \n    }\n  ]\n}",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"axway-api-management.1": {
			"type": "nodehandler://api-builder-plugin-axway-api-management/axway-api-management",
			"name": "Lookup current user",
			"method": "lookupCurrentUser",
			"parameters": [
				{
					"name": "requestHeaders",
					"type": "jsonpath",
					"value": "$.request.headers",
					"metaName": "Request Headers",
					"metaDescription": "The request headers are used to lookup the current users based on the current session cookie (VIDUSR)."
				},
				{
					"name": "getApiManagerUser",
					"type": "jsonpath",
					"value": "$.authzConfig.getApiManagerUser"
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"javascript.2"
					],
					"context": "$.user",
					"metaName": "Next"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Lookup current user"
		},
		"authorization.1": {
			"type": "nodehandler://api-builder-plugin-authorization/authorization",
			"name": "Get AuthZ Config",
			"method": "switchOnAuthZ",
			"parameters": [],
			"outputs": {
				"skip": {
					"routes": [
						"axway-api-management.1"
					],
					"context": "$.authzConfig",
					"metaName": "Skip"
				},
				"org": {
					"routes": [
						"axway-api-management.1"
					],
					"context": "$.authzConfig",
					"metaName": "Organization"
				},
				"extHttp": {
					"routes": [
						"axway-api-management.1"
					],
					"context": "$.authzConfig",
					"metaName": "Ext-HTTP"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Switch on Authorization"
		}
	}
}