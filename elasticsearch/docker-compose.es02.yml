version: '3.7'
services:
  # Elasticsearch node 2
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    # Custom entrypoint to configured ES based on given ELASTICSEARCH_HOSTS
    entrypoint: /usr/share/elasticsearch/scripts/custom-entrypoint.sh
    container_name: elasticsearch2
    environment:
      - "ES_JAVA_OPTS=${ES_JAVA_OPTS}"
      - cluster.name=${ELASTICSEARCH_CLUSTERNAME}
      - node.name=Elasticsearch 2
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
      - ELASTICSEARCH_ANONYMOUS_ENABLED=${ELASTICSEARCH_ANONYMOUS_ENABLED:-true}
      - SELF_MONITORING_ENABLED=${SELF_MONITORING_ENABLED}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/${ELASTICSEARCH_KEY}
      - xpack.security.http.ssl.key_passphrase=${ELASTICSEARCH_KEY_PASSPHRASE}
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/${ELASTICSEARCH_CRT}
      - xpack.security.http.ssl.certificate_authorities=/usr/share/elasticsearch/${ELASTICSEARCH_CA}
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.key=/usr/share/elasticsearch/${ELASTICSEARCH_KEY}
      - xpack.security.transport.ssl.key_passphrase=${ELASTICSEARCH_KEY_PASSPHRASE}
      - xpack.security.transport.ssl.certificate=/usr/share/elasticsearch/${ELASTICSEARCH_CRT}
      - xpack.security.transport.ssl.certificate_authorities=/usr/share/elasticsearch/${ELASTICSEARCH_CA}
      # Activate the following parameters for advanced setup
      #- network.publish_host=${ELASTICSEARCH_PUBLISH_HOST2}
      #- http.port=${ELASTICSEARCH_HOST2_HTTP}
      #- transport.port=${ELASTICSEARCH_HOST2_TRANSPORT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - ALL
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata2
        target: /usr/share/elasticsearch/data
      - ${PWD}/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ${PWD}/config/certificates:/usr/share/elasticsearch/config/certificates
      - ${PWD}/elasticsearch/scripts:/usr/share/elasticsearch/scripts
    networks:
      - elastic
    ports:
      - ${ELASTICSEARCH_HOST1_HTTP:-9201}:${ELASTICSEARCH_HOST1_HTTP:-9201}
      - ${ELASTICSEARCH_HOST1_TRANSPORT:-9301}:${ELASTICSEARCH_HOST1_TRANSPORT:-9301}
    logging:
      options:
        max-file: "5"
        max-size: "10m"

  # Metricbeat monitoring Elasticsearch node 1
  metricbeatES:
    image: docker.elastic.co/beats/metricbeat:${ELASTIC_VERSION}
    entrypoint: /usr/local/scripts/metricbeat-entrypoint.sh
    container_name: metricbeatES2
    hostname: Elasticsearch2
    command: --strict.perms=false -c configs/metricbeat.elasticsearch-container.yml -e -system.hostfs=/hostfs
    user: root # Required to monitor docker containers
    environment:
      - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOSTS}
      - KIBANA_HOST=${KIBANA_HOST}
      - ELASTICSEARCH_CLUSTER_UUID=${ELASTICSEARCH_CLUSTER_UUID}
      - ELASTICSEARCH_CA=${ELASTICSEARCH_CA}
      - METRICBEAT_USERNAME=${METRICBEAT_USERNAME}
      - METRICBEAT_PASSWORD=${METRICBEAT_PASSWORD}
      - METRICBEAT_ENABLED=${METRICBEAT_ENABLED}
      - METRICBEAT_SETUP_DASHBOARDS=${METRICBEAT_SETUP_DASHBOARDS}
    volumes:
      - type: volume
        source: metricbeatdata
        target: /usr/share/metricbeat/data 
      - /etc/localtime:/etc/localtime:ro # Required to sync timezone of the server into the Filebeat Docker-Container
      - ${PWD}/metricbeat/configs:/usr/share/metricbeat/configs
      - ${PWD}/metricbeat/activeDashboards:/usr/share/metricbeat/activeDashboards
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/config/certificates:/usr/share/metricbeat/config/certificates
      - ${PWD}/metricbeat/scripts:/usr/local/scripts
      # Make it possible to monitor the host machine
      # See here: https://www.elastic.co/guide/en/beats/metricbeat/current/running-on-docker.html
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
    networks:
      - elastic
    
    logging:
      options:
        max-file: "3"
        max-size: "10m"

volumes:
  esdata2:
  logs:
  metricbeatdata:

networks:
  elastic: