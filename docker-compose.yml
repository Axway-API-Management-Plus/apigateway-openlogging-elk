version: '3.7'
services:
  # The core component
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    container_name: elasticsearch1
    environment:
      # This should be 50% of your available memory, but not more than 31GB
      # The remaining 50% of memory will be used by Apache Lucene
      ES_HEAP_SIZE: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    volumes:
      - type: volume
        source: logs
        target: /var/log
      - type: volume
        source: esdata1
        target: /usr/share/elasticsearch/data
      - ${PWD}/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - elastic
      - ingress
    ports:
      - 9200:9200
      - 9300:9300

  # This is optional, but good to have to perform manual queries and create custom dashboards
  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.1
    container_name: kibana
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_HOSTS: http://elasticsearch1:9200/
    ports:
      - 5601:5601
    volumes:
      - type: volume
        source: logs
        target: /var/log
    ulimits:
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    networks:
      - elastic
      - ingress

  # Supposed to run side-by-side with the API-Gateway to watch the Open-Traffic Event files and send event to Logstash
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.8.1
    command: --strict.perms=false
    environment:
      - setup.kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch1:9200"]
      - LOGSTASH=${LOGSTASH}
      - ELASTIC_NODE=${ELASTIC_NODE}
    ports:
      - 9000:9000
    volumes:
      - ${PWD}/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ${APIGATEWAY_LOGS_FOLDER}:/var/log/work
      - ${APIGATEWAY_TRACES_FOLDER}:/var/log/trace
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elastic

  # Is receiving events from Filebeat and does pre-processing
  logstash:
    image: docker.elastic.co/logstash/logstash:7.8.1
    links:
      - elasticsearch1
    environment:
      - PIPELINE_WORKERS=1
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=["elasticsearch1:9200"]
      - API_BUILDER_URL=${API_BUILDER_URL}
      - MEMCACHED=${MEMCACHED}
    ports:
      - 5044:5044
    volumes:
      - ${PWD}/logstash/pipeline/pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf
      - ${PWD}/logstash/config/traffic_details_index_template.json:/usr/share/logstash/config/traffic_details_index_template.json
    command: logstash --path.config /usr/share/logstash/pipeline/pipeline.conf --pipeline.batch.size 400 --log.level info
    depends_on:
      - elasticsearch1
      - elk-traffic-monitor-api
      - memcached
    networks:
      - elastic

  # Memcached is used by the Logstash pipeline to cache API-Lookup information that are used to get the API-Organization
  memcached:
    image: memcached:1.6.6-alpine
    links:
      - elasticsearch1
    networks:
      - elastic

  # This is the API-Builder project exposing the API-Gateway Manager REST-API
  elk-traffic-monitor-api:
    image: cwiechmann/elk-traffic-monitor-api:v0.0.10
    links:
      - elasticsearch1
    environment:
      - ELASTIC_NODE=${ELASTIC_NODE}
      - ADMIN_NODE_MANAGER=${ADMIN_NODE_MANAGER}
      - API_MANAGER_USERNAME=${API_MANAGER_USERNAME}
      - API_MANAGER_PASSWORD=${API_MANAGER_PASSWORD}
      #- LOG_LEVEL=debug
    ports:
      - 8889:8080
    depends_on:
      - elasticsearch1
    networks:
      - elastic

volumes:
  esdata1:
  esdata2:
  logs:

networks:
  elastic:
  ingress:
