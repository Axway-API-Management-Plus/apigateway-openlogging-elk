{{- if .Values.apibuilder4elastic.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "apibuilder4elastic.fullname" . }}
  labels:
    {{- include "apibuilder4elastic.labels" . | nindent 4 }}
spec:
  {{- if not .Values.apibuilder4elastic.autoscaling.enabled }}
  replicas: {{ .Values.apibuilder4elastic.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "apibuilder4elastic.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.global.updateStrategy }}
  template:
    metadata:
      labels:
        {{- include "apibuilder4elastic.selectorLabels" . | nindent 8 }}
      annotations:
        {{/* This forces a restart if the configmap has changed */}}
        configchecksum: {{ include (print .Template.BasePath "/apibuilder4elastic/apibuilder4elastic-config.yaml") . | sha256sum | trunc 63 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
{{- if .Values.apibuilder4elastic.envFrom }}
        envFrom:
{{ toYaml .Values.apibuilder4elastic.envFrom | indent 10 }}
{{- end }}
{{- if .Values.apibuilder4elastic.extraEnvs }}
        env: {{ toYaml .Values.apibuilder4elastic.extraEnvs | nindent 10 }}
{{- end }}
        image: {{ .Values.apibuilder4elastic.image }}:{{ .Values.apibuilder4elastic.imageTag }}
        imagePullPolicy: {{ .Values.apibuilder4elastic.imagePullPolicy | quote }}
        {{- if .Values.global.imagePullSecrets }}
        imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 10 }}
        {{- end }}
        volumeMounts:
        {{- range .Values.apibuilder4elastic.secretMounts }}
        - name: {{ .name }}
          mountPath: {{ .path }}
          {{- if .subPath }}
          subPath: {{ .subPath }}
          {{- end }}
        {{- end }}
        {{- if .Values.apibuilder4elastic.extraVolumeMounts }}
{{ toYaml ( .Values.apibuilder4elastic.extraVolumeMounts ) | indent 8 }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.apibuilder4elastic.port }}
        resources: 
{{ toYaml .Values.apibuilder4elastic.resources | indent 10 }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.apibuilder4elastic.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: {{ .Values.apibuilder4elastic.port }}
          initialDelaySeconds: 30
          periodSeconds: 30
        lifecycle:
          preStop:
            exec:
              command: ["sleep","90"]
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        #command: ["sh", "-c", "tail -f /dev/null" ]
      restartPolicy: Always
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      securityContext:
{{ toYaml .Values.apibuilder4elastic.podSecurityContext | indent 8 }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      volumes:
        {{- range .Values.apibuilder4elastic.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            {{- if .defaultMode }}
            defaultMode: {{ .defaultMode }}
            {{- end }}
        {{- end }}
        {{- if .Values.apibuilder4elastic.extraVolumes }}
{{ toYaml ( .Values.apibuilder4elastic.extraVolumes ) | indent 8 }}
        {{- end }}
{{- end }}